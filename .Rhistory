prepost_df <- bind_rows(prepost_df,
tibble(alpha_sd = alpha_sd, ec_prepost = df$exp_cost |> mean()))
}
prior_df |>
left_join(y = prepost_df, by = alpha_sd)
prepost_df
prior_df
prior_df |>
left_join(y = prepost_df, by = 'alpha_sd')
prior_df |>
left_join(y = prepost_df, by = 'alpha_sd') |>
mutate(VoPI = ec_pr - ec_prepost)
n_maint <- maint_df$n_maint
prior_df <- tibble(alpha_sd = double(), ec_pr = double(), a_pr = integer())
prepost_df <- tibble(alpha_sd = double(), ec_prepost = double())
for (alpha_sd in c(0.01, 0.05, 0.1, 0.25)){
df_pr <- tibble(n_maint  = seq(from = 0, to = max_n_maint, by = 1),
alpha = list(alpha)) |>
mutate(beta = get_beta(n_maintenance = n_maint),
SPF = SPF_initial,
maint_cost = n_maint * heat_pump_cost_GBP * 1e-2,
SPF_coeff = map2(.x = alpha, .y = beta,
.f = function(.x, .y){(1 - .x) * (1 + .y)}),
SPF = map2(.x = SPF, .y = SPF_coeff,
.f = function(.x, .y){
lag(x = .x, n = 1, default = SPF_initial) * .y}),
elec_cost = map(.x = SPF,
.f = function(.x){GBP_per_kWh * heating_load_kWh / .x}),
total_cost = map2(.x = elec_cost, .y = maint_cost,
.f = function(.x, .y){ .x + .y})) |>
group_by(n_maint) |>
mutate(exp_cost = mean(unlist(total_cost))) |>
ungroup()
prior_df <- bind_rows(prior_df,
tibble(alpha_sd = alpha_sd, ec_pr = df_pr[which.min(df$exp_cost),]$exp_cost, a_pr = df_pr[which.min(df$exp_cost),]$n_maint))
df_pp <- tibble(alpha = alpha, n_maint = list(n_maint)) |>
mutate(beta = map(.x = n_maint,
.f = function(.x){get_beta(.x)}),
SPF = SPF_initial,
maint_cost = map(.x = n_maint,
.f = function(.x) {.x * heat_pump_cost_GBP * 1e-2}),
SPF_coeff = map2(.x = alpha, .y = beta,
.f = function(.x, .y){(1 - .x) * (1 + .y)}),
SPF = map2(.x = SPF, .y = SPF_coeff,
.f = function(.x, .y){
lag(x = .x, n = 1, default = SPF_initial) * .y}),
elec_cost = map(.x = SPF,
.f = function(.x){GBP_per_kWh * heating_load_kWh / .x}),
total_cost = map2(.x = elec_cost, .y = maint_cost,
.f = function(.x, .y){ .x + .y})) |>
mutate(exp_cost = map(.x = total_cost,
.f = function(.x) {min(unlist(.x))}),
exp_cost = unlist(exp_cost))
prepost_df <- bind_rows(prepost_df,
tibble(alpha_sd = alpha_sd, ec_prepost = df_pp$exp_cost |> mean()))
}
prior_df |>
left_join(y = prepost_df, by = 'alpha_sd') |>
mutate(VoPI = ec_pr - ec_prepost)
n_maint <- maint_df$n_maint
prior_df <- tibble(alpha_sd = double(), ec_pr = double(), a_pr = integer())
prepost_df <- tibble(alpha_sd = double(), ec_prepost = double())
for (alpha_sd in c(0.01, 0.05, 0.1, 0.25)){
alpha <- rnorm(n = n_samples, mean = 1/4, sd = alpha_sd)
df_pr <- tibble(n_maint  = seq(from = 0, to = max_n_maint, by = 1),
alpha = list(alpha)) |>
mutate(beta = get_beta(n_maintenance = n_maint),
SPF = SPF_initial,
maint_cost = n_maint * heat_pump_cost_GBP * 1e-2,
SPF_coeff = map2(.x = alpha, .y = beta,
.f = function(.x, .y){(1 - .x) * (1 + .y)}),
SPF = map2(.x = SPF, .y = SPF_coeff,
.f = function(.x, .y){
lag(x = .x, n = 1, default = SPF_initial) * .y}),
elec_cost = map(.x = SPF,
.f = function(.x){GBP_per_kWh * heating_load_kWh / .x}),
total_cost = map2(.x = elec_cost, .y = maint_cost,
.f = function(.x, .y){ .x + .y})) |>
group_by(n_maint) |>
mutate(exp_cost = mean(unlist(total_cost))) |>
ungroup()
prior_df <- bind_rows(prior_df,
tibble(alpha_sd = alpha_sd, ec_pr = df_pr[which.min(df_pr$exp_cost),]$exp_cost, a_pr = df_pr[which.min(df_pr$exp_cost),]$n_maint))
df_pp <- tibble(alpha = alpha, n_maint = list(n_maint)) |>
mutate(beta = map(.x = n_maint,
.f = function(.x){get_beta(.x)}),
SPF = SPF_initial,
maint_cost = map(.x = n_maint,
.f = function(.x) {.x * heat_pump_cost_GBP * 1e-2}),
SPF_coeff = map2(.x = alpha, .y = beta,
.f = function(.x, .y){(1 - .x) * (1 + .y)}),
SPF = map2(.x = SPF, .y = SPF_coeff,
.f = function(.x, .y){
lag(x = .x, n = 1, default = SPF_initial) * .y}),
elec_cost = map(.x = SPF,
.f = function(.x){GBP_per_kWh * heating_load_kWh / .x}),
total_cost = map2(.x = elec_cost, .y = maint_cost,
.f = function(.x, .y){ .x + .y})) |>
mutate(exp_cost = map(.x = total_cost,
.f = function(.x) {min(unlist(.x))}),
exp_cost = unlist(exp_cost))
prepost_df <- bind_rows(prepost_df,
tibble(alpha_sd = alpha_sd, ec_prepost = df_pp$exp_cost |> mean()))
}
prior_df |>
left_join(y = prepost_df, by = 'alpha_sd') |>
mutate(VoPI = ec_pr - ec_prepost)
ggplot(data = VoPI_df, mapping = aes(x = alpha_sd, y = VoPI))+
geom_point() + geom_line()
VoPI_df <- prior_df |>
left_join(y = prepost_df, by = 'alpha_sd') |>
mutate(VoPI = ec_pr - ec_prepost)
ggplot(data = VoPI_df, mapping = aes(x = alpha_sd, y = VoPI))+
geom_point() + geom_line()
ggplot(data = VoPI_df, mapping = aes(x = alpha_sd, y = VoPI))+
geom_point(shape = 1, size = 1) + geom_line(alpha = 1/4)
ggplot(data = VoPI_df, mapping = aes(x = alpha_sd, y = VoPI))+
geom_point(shape = 1, size = 1) + geom_line(alpha = 1/4)+
scale_x_continuous(name = expression(paste('Uncertainty (std. dev.) in prior model of', alpha, ')')))
ggplot(data = VoPI_df, mapping = aes(x = alpha_sd, y = VoPI))+
geom_point(shape = 1, size = 1) + geom_line(alpha = 1/4)+
scale_x_continuous(name = expression(paste('Uncertainty (std. dev.) in prior model of ', alpha, ')')))+
scale_y_continuous(name = 'Expected value of smart meter data, £)', labels = scales::comma)
ggplot(data = VoPI_df, mapping = aes(x = alpha_sd, y = VoPI))+
geom_point(shape = 1, size = 1) + geom_line(alpha = 1/4)+
scale_x_continuous(name = expression(paste('Uncertainty (std. dev.) in prior model of ', alpha, ')')))+
scale_y_continuous(name = 'Expected value of smart meter data, £)', labels = scales::comma)+
ggthemes::theme_base(base_size = 12, base_family = "Atkinson Hyperlegible")+
theme(plot.background = element_rect(color = NA))
ggplot(data = VoPI_df, mapping = aes(x = alpha_sd, y = VoPI))+
geom_point(shape = 1, size = 1) + geom_line(alpha = 1/4)+
scale_x_continuous(name = expression(paste('Uncertainty (std. dev.) in prior model of ', alpha)))+
scale_y_continuous(name = 'Expected value of smart meter data, £', labels = scales::comma)+
ggthemes::theme_base(base_size = 12, base_family = "Atkinson Hyperlegible")+
theme(plot.background = element_rect(color = NA))
tibble(x = seq(from = 0, to = max_n_maint, by = 1)) |>
mutate(beta = get_beta(n_maintenance = x)) |>
ggplot(mapping = aes(x, beta))+
geom_point()
get_beta <- function(n_maintenance){
# a <- 0.07349026; b <- 11.24172755; gamma <- 1.30736477
a <- 1/4; gamma <- 2; b <- 10
(a * n_maintenance^gamma) / (n_maintenance^gamma + b)
}
n_samples <- 1e3; alpha <- rnorm(n = n_samples, mean = 1/4, sd = 1/20)
SPF_initial <- 3
max_n_maint <- 12
heat_pump_cost_GBP <- 441890; heating_load_kWh <- 1753914; GBP_per_kWh <- 0.51
tibble(x = seq(from = 0, to = max_n_maint, by = 1)) |>
mutate(beta = get_beta(n_maintenance = x)) |>
ggplot(mapping = aes(x, beta))+
geom_point()
#| echo: false
#| label: fig-prior_heat_pump_decision
#| fig-cap: "Identification of Number of Expected Optimal Heat Pump Maintenance Activities"
maint_df <- tibble(n_maint  = seq(from = 0, to = max_n_maint, by = 1),
alpha = list(alpha)) |>
mutate(beta = get_beta(n_maintenance = n_maint),
SPF = SPF_initial,
maint_cost = n_maint * heat_pump_cost_GBP * 1e-2,
SPF_coeff = map2(.x = alpha, .y = beta,
.f = function(.x, .y){(1 - .x) * (1 + .y)}),
SPF = map2(.x = SPF, .y = SPF_coeff,
.f = function(.x, .y){
lag(x = .x, n = 1, default = SPF_initial) * .y}),
elec_cost = map(.x = SPF,
.f = function(.x){GBP_per_kWh * heating_load_kWh / .x}),
total_cost = map2(.x = elec_cost, .y = maint_cost,
.f = function(.x, .y){ .x + .y}))
exp_cost_df <- maint_df |> group_by(n_maint) |>
mutate(exp_cost = mean(unlist(total_cost))) |> ungroup()
ggplot(data = maint_df |>
tidyr::unnest(cols = total_cost) |>
mutate(id = rep(x = seq(from = 1, to = n_samples, by = 1), times = max_n_maint + 1)),
mapping = aes(x = n_maint, y = total_cost))+
geom_line(mapping = aes(group = id), alpha = 1/50)+
scale_x_continuous(name = 'Number of scheduled maintenance activities per year',
breaks = seq(from = 0, to = 12, by = 1))+
scale_y_continuous(name = 'Total (annual) operational costs, £', labels = scales::comma)+
geom_vline(lty = 2, alpha = 1/2,
mapping = aes(color = 'Expected minimum cost',
xintercept = exp_cost_df[which.min(exp_cost_df$exp_cost),]$n_maint))+
ggthemes::theme_base(base_size = 12, base_family = "Atkinson Hyperlegible")+
theme(plot.background = element_rect(color = NA),
legend.title = element_blank(), legend.position = 'top')
n_maint <- maint_df$n_maint
prior_df <- tibble(alpha_sd = double(), ec_pr = double(), a_pr = integer())
prepost_df <- tibble(alpha_sd = double(), ec_prepost = double())
for (alpha_sd in c(0.01, 0.05, 0.1, 0.25)){
alpha <- rnorm(n = n_samples, mean = 1/2, sd = alpha_sd)
df_pr <- tibble(n_maint  = seq(from = 0, to = max_n_maint, by = 1),
alpha = list(alpha)) |>
mutate(beta = get_beta(n_maintenance = n_maint),
SPF = SPF_initial,
maint_cost = n_maint * heat_pump_cost_GBP * 1e-2,
SPF_coeff = map2(.x = alpha, .y = beta,
.f = function(.x, .y){(1 - .x) * (1 + .y)}),
SPF = map2(.x = SPF, .y = SPF_coeff,
.f = function(.x, .y){
lag(x = .x, n = 1, default = SPF_initial) * .y}),
elec_cost = map(.x = SPF,
.f = function(.x){GBP_per_kWh * heating_load_kWh / .x}),
total_cost = map2(.x = elec_cost, .y = maint_cost,
.f = function(.x, .y){ .x + .y})) |>
group_by(n_maint) |>
mutate(exp_cost = mean(unlist(total_cost))) |>
ungroup()
prior_df <- bind_rows(prior_df,
tibble(alpha_sd = alpha_sd, ec_pr = df_pr[which.min(df_pr$exp_cost),]$exp_cost, a_pr = df_pr[which.min(df_pr$exp_cost),]$n_maint))
df_pp <- tibble(alpha = alpha, n_maint = list(n_maint)) |>
mutate(beta = map(.x = n_maint,
.f = function(.x){get_beta(.x)}),
SPF = SPF_initial,
maint_cost = map(.x = n_maint,
.f = function(.x) {.x * heat_pump_cost_GBP * 1e-2}),
SPF_coeff = map2(.x = alpha, .y = beta,
.f = function(.x, .y){(1 - .x) * (1 + .y)}),
SPF = map2(.x = SPF, .y = SPF_coeff,
.f = function(.x, .y){
lag(x = .x, n = 1, default = SPF_initial) * .y}),
elec_cost = map(.x = SPF,
.f = function(.x){GBP_per_kWh * heating_load_kWh / .x}),
total_cost = map2(.x = elec_cost, .y = maint_cost,
.f = function(.x, .y){ .x + .y})) |>
mutate(exp_cost = map(.x = total_cost,
.f = function(.x) {min(unlist(.x))}),
exp_cost = unlist(exp_cost))
prepost_df <- bind_rows(prepost_df,
tibble(alpha_sd = alpha_sd, ec_prepost = df_pp$exp_cost |> mean()))
}
VoPI_df <- prior_df |>
left_join(y = prepost_df, by = 'alpha_sd') |>
mutate(VoPI = ec_pr - ec_prepost)
ggplot(data = VoPI_df, mapping = aes(x = alpha_sd, y = VoPI))+
geom_point(shape = 1, size = 1) + geom_line(alpha = 1/4)+
scale_x_continuous(name = expression(paste('Uncertainty (std. dev.) in prior model of ', alpha)))+
scale_y_continuous(name = 'Expected value of smart meter data, £', labels = scales::comma)+
ggthemes::theme_base(base_size = 12, base_family = "Atkinson Hyperlegible")+
theme(plot.background = element_rect(color = NA))
get_beta <- function(n_maintenance){
a <- 0.07349026; b <- 11.24172755; gamma <- 1.30736477
# a <- 1/4; gamma <- 2; b <- 10
(a * n_maintenance^gamma) / (n_maintenance^gamma + b)
}
n_samples <- 1e3; alpha <- rnorm(n = n_samples, mean = 1/4, sd = 1/20)
SPF_initial <- 3
max_n_maint <- 12
heat_pump_cost_GBP <- 441890; heating_load_kWh <- 1753914; GBP_per_kWh <- 0.51
get_beta <- function(n_maintenance){
a <- 0.07349026; b <- 11.24172755; gamma <- 1.30736477
# a <- 1/4; gamma <- 2; b <- 10
(a * n_maintenance^gamma) / (n_maintenance^gamma + b)
}
n_samples <- 1e3; alpha <- rnorm(n = n_samples, mean = 1.6e-2, sd = 1.6e-3)
SPF_initial <- 3
max_n_maint <- 12
heat_pump_cost_GBP <- 441890; heating_load_kWh <- 1753914; GBP_per_kWh <- 0.51
tibble(x = seq(from = 0, to = max_n_maint, by = 1)) |>
mutate(beta = get_beta(n_maintenance = x)) |>
ggplot(mapping = aes(x, beta))+
geom_point()
#| echo: false
#| label: fig-prior_heat_pump_decision
#| fig-cap: "Identification of Number of Expected Optimal Heat Pump Maintenance Activities"
maint_df <- tibble(n_maint  = seq(from = 0, to = max_n_maint, by = 1),
alpha = list(alpha)) |>
mutate(beta = get_beta(n_maintenance = n_maint),
SPF = SPF_initial,
maint_cost = n_maint * heat_pump_cost_GBP * 1e-2,
SPF_coeff = map2(.x = alpha, .y = beta,
.f = function(.x, .y){(1 - .x) * (1 + .y)}),
SPF = map2(.x = SPF, .y = SPF_coeff,
.f = function(.x, .y){
lag(x = .x, n = 1, default = SPF_initial) * .y}),
elec_cost = map(.x = SPF,
.f = function(.x){GBP_per_kWh * heating_load_kWh / .x}),
total_cost = map2(.x = elec_cost, .y = maint_cost,
.f = function(.x, .y){ .x + .y}))
exp_cost_df <- maint_df |> group_by(n_maint) |>
mutate(exp_cost = mean(unlist(total_cost))) |> ungroup()
ggplot(data = maint_df |>
tidyr::unnest(cols = total_cost) |>
mutate(id = rep(x = seq(from = 1, to = n_samples, by = 1), times = max_n_maint + 1)),
mapping = aes(x = n_maint, y = total_cost))+
geom_line(mapping = aes(group = id), alpha = 1/50)+
scale_x_continuous(name = 'Number of scheduled maintenance activities per year',
breaks = seq(from = 0, to = 12, by = 1))+
scale_y_continuous(name = 'Total (annual) operational costs, £', labels = scales::comma)+
geom_vline(lty = 2, alpha = 1/2,
mapping = aes(color = 'Expected minimum cost',
xintercept = exp_cost_df[which.min(exp_cost_df$exp_cost),]$n_maint))+
ggthemes::theme_base(base_size = 12, base_family = "Atkinson Hyperlegible")+
theme(plot.background = element_rect(color = NA),
legend.title = element_blank(), legend.position = 'top')
get_beta <- function(n_maintenance){
a <- 0.07349026; b <- 11.24172755; gamma <- 1.30736477
# a <- 1/4; gamma <- 2; b <- 10
(a * n_maintenance^gamma) / (n_maintenance^gamma + b)
}
n_samples <- 1e3; alpha <- rnorm(n = n_samples, mean = 1.6e-2, sd = 1.6e-3)
SPF_initial <- 3
max_n_maint <- 12
heat_pump_cost_GBP <- 441890/4; heating_load_kWh <- 1753914; GBP_per_kWh <- 0.51
#| echo: false
#| label: fig-prior_heat_pump_decision
#| fig-cap: "Identification of Number of Expected Optimal Heat Pump Maintenance Activities"
maint_df <- tibble(n_maint  = seq(from = 0, to = max_n_maint, by = 1),
alpha = list(alpha)) |>
mutate(beta = get_beta(n_maintenance = n_maint),
SPF = SPF_initial,
maint_cost = n_maint * heat_pump_cost_GBP * 1e-2,
SPF_coeff = map2(.x = alpha, .y = beta,
.f = function(.x, .y){(1 - .x) * (1 + .y)}),
SPF = map2(.x = SPF, .y = SPF_coeff,
.f = function(.x, .y){
lag(x = .x, n = 1, default = SPF_initial) * .y}),
elec_cost = map(.x = SPF,
.f = function(.x){GBP_per_kWh * heating_load_kWh / .x}),
total_cost = map2(.x = elec_cost, .y = maint_cost,
.f = function(.x, .y){ .x + .y}))
exp_cost_df <- maint_df |> group_by(n_maint) |>
mutate(exp_cost = mean(unlist(total_cost))) |> ungroup()
ggplot(data = maint_df |>
tidyr::unnest(cols = total_cost) |>
mutate(id = rep(x = seq(from = 1, to = n_samples, by = 1), times = max_n_maint + 1)),
mapping = aes(x = n_maint, y = total_cost))+
geom_line(mapping = aes(group = id), alpha = 1/50)+
scale_x_continuous(name = 'Number of scheduled maintenance activities per year',
breaks = seq(from = 0, to = 12, by = 1))+
scale_y_continuous(name = 'Total (annual) operational costs, £', labels = scales::comma)+
geom_vline(lty = 2, alpha = 1/2,
mapping = aes(color = 'Expected minimum cost',
xintercept = exp_cost_df[which.min(exp_cost_df$exp_cost),]$n_maint))+
ggthemes::theme_base(base_size = 12, base_family = "Atkinson Hyperlegible")+
theme(plot.background = element_rect(color = NA),
legend.title = element_blank(), legend.position = 'top')
n_maint <- maint_df$n_maint
prior_df <- tibble(alpha_sd = double(), ec_pr = double(), a_pr = integer())
prepost_df <- tibble(alpha_sd = double(), ec_prepost = double())
for (alpha_sd in c(0.01, 0.05, 0.1, 0.25)){
alpha <- rnorm(n = n_samples, mean = 1/2, sd = alpha_sd)
df_pr <- tibble(n_maint  = seq(from = 0, to = max_n_maint, by = 1),
alpha = list(alpha)) |>
mutate(beta = get_beta(n_maintenance = n_maint),
SPF = SPF_initial,
maint_cost = n_maint * heat_pump_cost_GBP * 1e-2,
SPF_coeff = map2(.x = alpha, .y = beta,
.f = function(.x, .y){(1 - .x) * (1 + .y)}),
SPF = map2(.x = SPF, .y = SPF_coeff,
.f = function(.x, .y){
lag(x = .x, n = 1, default = SPF_initial) * .y}),
elec_cost = map(.x = SPF,
.f = function(.x){GBP_per_kWh * heating_load_kWh / .x}),
total_cost = map2(.x = elec_cost, .y = maint_cost,
.f = function(.x, .y){ .x + .y})) |>
group_by(n_maint) |>
mutate(exp_cost = mean(unlist(total_cost))) |>
ungroup()
prior_df <- bind_rows(prior_df,
tibble(alpha_sd = alpha_sd, ec_pr = df_pr[which.min(df_pr$exp_cost),]$exp_cost, a_pr = df_pr[which.min(df_pr$exp_cost),]$n_maint))
df_pp <- tibble(alpha = alpha, n_maint = list(n_maint)) |>
mutate(beta = map(.x = n_maint,
.f = function(.x){get_beta(.x)}),
SPF = SPF_initial,
maint_cost = map(.x = n_maint,
.f = function(.x) {.x * heat_pump_cost_GBP * 1e-2}),
SPF_coeff = map2(.x = alpha, .y = beta,
.f = function(.x, .y){(1 - .x) * (1 + .y)}),
SPF = map2(.x = SPF, .y = SPF_coeff,
.f = function(.x, .y){
lag(x = .x, n = 1, default = SPF_initial) * .y}),
elec_cost = map(.x = SPF,
.f = function(.x){GBP_per_kWh * heating_load_kWh / .x}),
total_cost = map2(.x = elec_cost, .y = maint_cost,
.f = function(.x, .y){ .x + .y})) |>
mutate(exp_cost = map(.x = total_cost,
.f = function(.x) {min(unlist(.x))}),
exp_cost = unlist(exp_cost))
prepost_df <- bind_rows(prepost_df,
tibble(alpha_sd = alpha_sd, ec_prepost = df_pp$exp_cost |> mean()))
}
VoPI_df <- prior_df |>
left_join(y = prepost_df, by = 'alpha_sd') |>
mutate(VoPI = ec_pr - ec_prepost)
ggplot(data = VoPI_df, mapping = aes(x = alpha_sd, y = VoPI))+
geom_point(shape = 1, size = 1) + geom_line(alpha = 1/4)+
scale_x_continuous(name = expression(paste('Uncertainty (std. dev.) in prior model of ', alpha)))+
scale_y_continuous(name = 'Expected value of smart meter data, £', labels = scales::comma)+
ggthemes::theme_base(base_size = 12, base_family = "Atkinson Hyperlegible")+
theme(plot.background = element_rect(color = NA))
VoPI_df
ggplot(data = VoPI_df, mapping = aes(x = alpha_sd, y = VoPI))+
geom_point(shape = 1, size = 1) + geom_line(alpha = 1/4)+
geom_text(mapping = aes(label = VoPI |> signif(digits = 3)))
scale_x_continuous(name = expression(paste('Uncertainty (std. dev.) in prior model of ', alpha)))+
scale_y_continuous(name = 'Expected value of smart meter data, £', labels = scales::comma)+
ggthemes::theme_base(base_size = 12, base_family = "Atkinson Hyperlegible")+
theme(plot.background = element_rect(color = NA))
ggplot(data = VoPI_df, mapping = aes(x = alpha_sd, y = VoPI))+
geom_point(shape = 1, size = 1) + geom_line(alpha = 1/4)+
geom_text(mapping = aes(label = VoPI |> signif(digits = 3)))+
scale_x_continuous(name = expression(paste('Uncertainty (std. dev.) in prior model of ', alpha)))+
scale_y_continuous(name = 'Expected value of smart meter data, £', labels = scales::comma)+
ggthemes::theme_base(base_size = 12, base_family = "Atkinson Hyperlegible")+
theme(plot.background = element_rect(color = NA))
ggplot(data = VoPI_df, mapping = aes(x = alpha_sd, y = VoPI))+
geom_point(shape = 1, size = 1) + geom_line(alpha = 1/4)+
geom_text(mapping = aes(label = VoPI |> signif(digits = 3)), family = "Atkinson Hyperlegible", size = 3, vjust = 3)+
scale_x_continuous(name = expression(paste('Uncertainty (std. dev.) in prior model of ', alpha)))+
scale_y_continuous(name = 'Expected value of smart meter data, £', labels = scales::comma)+
ggthemes::theme_base(base_size = 12, base_family = "Atkinson Hyperlegible")+
theme(plot.background = element_rect(color = NA))
ggplot(data = VoPI_df, mapping = aes(x = alpha_sd, y = VoPI))+
geom_point(shape = 1, size = 1) + geom_line(alpha = 1/4)+
geom_text(mapping = aes(label = VoPI |> signif(digits = 3)), family = "Atkinson Hyperlegible", size = 3, vjust = -3)+
scale_x_continuous(name = expression(paste('Uncertainty (std. dev.) in prior model of ', alpha)))+
scale_y_continuous(name = 'Expected value of smart meter data, £', labels = scales::comma)+
ggthemes::theme_base(base_size = 12, base_family = "Atkinson Hyperlegible")+
theme(plot.background = element_rect(color = NA))
ggplot(data = VoPI_df, mapping = aes(x = alpha_sd, y = VoPI))+
geom_point(shape = 1, size = 1) + geom_line(alpha = 1/4)+
geom_text(mapping = aes(label = VoPI |> signif(digits = 3)), family = "Atkinson Hyperlegible", size = 3, vjust = -2)+
scale_x_continuous(name = expression(paste('Uncertainty (std. dev.) in prior model of ', alpha)))+
scale_y_continuous(name = 'Expected value of smart meter data, £', labels = scales::comma)+
ggthemes::theme_base(base_size = 12, base_family = "Atkinson Hyperlegible")+
theme(plot.background = element_rect(color = NA))
ggplot(data = VoPI_df, mapping = aes(x = alpha_sd, y = VoPI))+
geom_point(shape = 1, size = 1) + geom_line(alpha = 1/4)+
geom_text(mapping = aes(label = VoPI |> signif(digits = 3)), family = "Atkinson Hyperlegible", size = 3, vjust = -1)+
scale_x_continuous(name = expression(paste('Uncertainty (std. dev.) in prior model of ', alpha)))+
scale_y_continuous(name = 'Expected value of smart meter data, £', labels = scales::comma)+
ggthemes::theme_base(base_size = 12, base_family = "Atkinson Hyperlegible")+
theme(plot.background = element_rect(color = NA))
ggplot(data = VoPI_df, mapping = aes(x = alpha_sd, y = VoPI))+
geom_point(shape = 1, size = 1) + geom_line(alpha = 1/4)+
geom_text(mapping = aes(label = VoPI |> signif(digits = 3)), family = "Atkinson Hyperlegible", size = 3, vjust = -1)+
scale_x_continuous(name = expression(paste('Uncertainty (std. dev.) in prior model of ', alpha)))+
scale_y_continuous(name = 'Expected value of smart meter data, £', labels = scales::comma, limits = c(0, VoPI_df$VoPI |> max() + 3e3))+
ggthemes::theme_base(base_size = 12, base_family = "Atkinson Hyperlegible")+
theme(plot.background = element_rect(color = NA))
ggplot(data = VoPI_df, mapping = aes(x = alpha_sd, y = VoPI))+
geom_point(shape = 1, size = 1) + geom_line(alpha = 1/4)+
geom_text(mapping = aes(label = VoPI |> signif(digits = 3)) |> scales::comma(), family = "Atkinson Hyperlegible", size = 3, vjust = -1)+
scale_x_continuous(name = expression(paste('Uncertainty (std. dev.) in prior model of ', alpha)))+
scale_y_continuous(name = 'Expected value of smart meter data, £', labels = scales::comma, limits = c(0, VoPI_df$VoPI |> max() + 3e3))+
ggthemes::theme_base(base_size = 12, base_family = "Atkinson Hyperlegible")+
theme(plot.background = element_rect(color = NA))
ggplot(data = VoPI_df, mapping = aes(x = alpha_sd, y = VoPI))+
geom_point(shape = 1, size = 1) + geom_line(alpha = 1/4)+
geom_text(mapping = aes(label = VoPI |> signif(digits = 3)) |> scales::comma_format(), family = "Atkinson Hyperlegible", size = 3, vjust = -1)+
scale_x_continuous(name = expression(paste('Uncertainty (std. dev.) in prior model of ', alpha)))+
scale_y_continuous(name = 'Expected value of smart meter data, £', labels = scales::comma, limits = c(0, VoPI_df$VoPI |> max() + 3e3))+
ggthemes::theme_base(base_size = 12, base_family = "Atkinson Hyperlegible")+
theme(plot.background = element_rect(color = NA))
ggplot(data = VoPI_df, mapping = aes(x = alpha_sd, y = VoPI))+
geom_point(shape = 1, size = 1) + geom_line(alpha = 1/4)+
geom_text(mapping = aes(label = paste("£", VoPI |> signif(digits = 3))),
family = "Atkinson Hyperlegible", size = 3, vjust = -1)+
scale_x_continuous(name = expression(paste('Uncertainty (std. dev.) in prior model of ', alpha)))+
scale_y_continuous(name = 'Expected value of smart meter data, £', labels = scales::comma, limits = c(0, VoPI_df$VoPI |> max() + 3e3))+
ggthemes::theme_base(base_size = 12, base_family = "Atkinson Hyperlegible")+
theme(plot.background = element_rect(color = NA))
#| echo: false
#| label: fig-prior_heat_pump_decision
#| fig-cap: "Identification of Number of Expected Optimal Heat Pump Maintenance Activities"
ggplot(data = VoPI_df, mapping = aes(x = alpha_sd, y = VoPI))+
geom_point(shape = 1, size = 1) + geom_line(alpha = 1/4)+
geom_text(mapping = aes(label = paste("£", VoPI |> signif(digits = 3))),
family = "Atkinson Hyperlegible", size = 3, vjust = -1)+
scale_x_continuous(name = expression(paste('Uncertainty (std. dev.) in prior model of ', alpha)))+
scale_y_continuous(name = 'Expected value of smart meter data, £', labels = scales::comma, limits = c(0, VoPI_df$VoPI |> max() + 3e3))+
ggthemes::theme_base(base_size = 12, base_family = "Atkinson Hyperlegible")+
theme(plot.background = element_rect(color = NA))
tibble(x = seq(from = 0, to = max_n_maint, by = 1)) |>
mutate(beta = get_beta(n_maintenance = x)) |>
ggplot(mapping = aes(x, beta))+
geom_point()+
scale_x_continuous(name = 'Number of scheduled maintenance activities per year')+
scale_y_continuous(name = expression(beta))+
ggthemes::theme_base(base_size = 12, base_family = "Atkinson Hyperlegible")+
theme(plot.background = element_rect(color = NA),
legend.title = element_blank(), legend.position = 'top')
tibble(x = seq(from = 0, to = max_n_maint, by = 1)) |>
mutate(beta = get_beta(n_maintenance = x)) |>
ggplot(mapping = aes(x, beta))+
geom_point(shape = 1, size = 1)+
scale_x_continuous(name = 'Number of scheduled maintenance activities per year')+
scale_y_continuous(name = expression(beta))+
ggthemes::theme_base(base_size = 12, base_family = "Atkinson Hyperlegible")+
theme(plot.background = element_rect(color = NA),
legend.title = element_blank(), legend.position = 'top')
tibble(x = seq(from = 0, to = max_n_maint, by = 1)) |>
mutate(beta = get_beta(n_maintenance = x)) |>
ggplot(mapping = aes(x, beta))+
geom_point(shape = 1, size = 1)+
geom_line(alpha = 1/4)
scale_x_continuous(name = 'Number of scheduled maintenance activities per year')+
scale_y_continuous(name = expression(beta))+
ggthemes::theme_base(base_size = 12, base_family = "Atkinson Hyperlegible")+
theme(plot.background = element_rect(color = NA),
legend.title = element_blank(), legend.position = 'top')
tibble(x = seq(from = 0, to = max_n_maint, by = 1)) |>
mutate(beta = get_beta(n_maintenance = x)) |>
ggplot(mapping = aes(x, beta))+
geom_point(shape = 1, size = 1)+
geom_line(alpha = 1/4)+
scale_x_continuous(name = 'Number of scheduled maintenance activities per year')+
scale_y_continuous(name = expression(beta))+
ggthemes::theme_base(base_size = 12, base_family = "Atkinson Hyperlegible")+
theme(plot.background = element_rect(color = NA),
legend.title = element_blank(), legend.position = 'top')
reticulate::repl_python()
