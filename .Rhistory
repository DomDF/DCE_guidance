#| label: load_Python_packages
import cmdstanpy, numpy as np, pandas as pd
from scipy import stats
#| label: load_Python_packages
import cmdstanpy, numpy as np, pandas as pd
from scipy import stats
stats.norm.rvs(size = 10, loc = 0, scale = 1)
strength_df = pd.read_csv(filepath_or_buffer = "https://raw.githubusercontent.com/DomDF/DCE_guidance/main/strength_data.csv")
strength_df.head(n = 3)
strength_df = pd.read_csv(filepath_or_buffer = "https://raw.githubusercontent.com/DomDF/DCE_guidance/main/data_files/strength_data.csv")
strength_df.head(n = 3)
stats.norm.fit(data = strength_df['yield'].values, method = 'MLE')
import tensorflow as tf
import tensorflow_probability as tfp
locations = tfp.distributions.Normal(loc = 0, scale = 1).sample(sample_shape = 10, seed = 2408)
data = tfp.distributions.Bernoulli(logits = 2 * locations).sample()
Bayesian_logistic_model = tfp.glm.Bernoulli()
model_fit = tfp.glm.fit(model_matrix = locations[:, tf.newaxis], response = tf.cast(data, dtype = tf.float32), model = Bayesian_logistic_model)
model_fit
